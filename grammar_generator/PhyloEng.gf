concrete PhyloEng of Phylo = open SyntaxEng, ParadigmsEng, ConstructorsEng in {
    lincat
        Message = S;
        Input = NP;
        Output = NP;
        Format = NP;
    lin
        f_phylotastic_ResolvedScientificNames_GNR_TNRS_POST i_resource_SetOfSciName o_resource_SetOfTaxon o_resource_SetOfResolvedName = mkS and_Conj (mkS (mkCl phylotastic_ResolvedScientificNames_GNR_TNRS_POST_in i_resource_SetOfSciName)) (mkS (mkCl phylotastic_ResolvedScientificNames_GNR_TNRS_POST_out (mkNP both7and_DConj o_resource_SetOfTaxon o_resource_SetOfResolvedName)));
        f_convert_species_tree_format_NMSU_to_NewickTree i_resource_speciesTree o_resource_speciesTree = mkS (mkCl convert_species_tree_format_NMSU_to_NewickTree_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_speciesTree (mkVP (mkV2 "extract") o_resource_speciesTree ));
        f_names_extraction_document i_resource_Document o_resource_SetOfSciName = mkS (mkCl names_extraction_document_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_Document (mkVP (mkV2 "extract") o_resource_SetOfSciName ));
        f_phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET i_resource_taxon o_resource_SetOfSciName o_resource_taxon = mkS and_Conj (mkS (mkCl phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET_in i_resource_taxon)) (mkS (mkCl phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET_out (mkNP both7and_DConj o_resource_SetOfSciName o_resource_taxon)));
        f_phylotastic_ResolvedScientificNames_OT_TNRS_GET i_resource_SetOfSciName o_resource_SetOfTaxon o_resource_SetOfResolvedName = mkS and_Conj (mkS (mkCl i_resource_SetOfSciName phylotastic_ResolvedScientificNames_OT_TNRS_GET_in)) (mkS (mkCl (mkNP both7and_DConj o_resource_SetOfTaxon o_resource_SetOfResolvedName) phylotastic_ResolvedScientificNames_OT_TNRS_GET_out));
        f_convert_df_sci_names_format_1_to_3 i_resource_SetOfSciName o_resource_SetOfSciName = mkS (mkCl convert_df_sci_names_format_1_to_3_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfSciName (mkVP (mkV2 "extract") o_resource_SetOfSciName ));
        f_convert_df_sci_names_format_3_to_5 i_resource_SetOfSciName o_resource_SetOfSciName = mkS (mkCl convert_df_sci_names_format_3_to_5_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfSciName (mkVP (mkV2 "extract") o_resource_SetOfSciName ));
        f_convert_df_taxons_format_3_to_5 i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS (mkCl convert_df_taxons_format_3_to_5_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfTaxon (mkVP (mkV2 "extract") o_resource_SetOfTaxon ));
        f_phylotastic_GetPhylogeneticTree_OT_GET i_resource_SetOfTaxon o_resource_speciesTree o_resource_Tree = mkS (mkCl phylotastic_GetPhylogeneticTree_OT_GET_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfTaxon (mkVP (mkV2 "extract") (mkNP and_Conj o_resource_speciesTree o_resource_Tree) ));
        f_convert_species_tree_format_PhyloTree_to_phylo4Tree i_resource_speciesTree o_resource_speciesTree = mkS and_Conj (mkS (mkCl convert_species_tree_format_PhyloTree_to_phylo4Tree_in (mkV2 "require") i_resource_speciesTree)) (mkS (mkCl convert_species_tree_format_PhyloTree_to_phylo4Tree_out (mkV2 "return") o_resource_speciesTree ));
        f_convert_df_sci_names_format_6_to_OT i_resource_SetOfSciName o_resource_SetOfSciName = mkS (mkCl convert_df_sci_names_format_6_to_OT_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfSciName (mkVP (mkV2 "extract") o_resource_SetOfSciName ));
        f_convert_df_taxons_format_2_to_4 i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS (mkCl convert_df_taxons_format_2_to_4_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfTaxon (mkVP (mkV2 "extract") o_resource_SetOfTaxon ));
        f_convert_df_resolved_names_format_GNR_to_Phylomatic i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS and_Conj (mkS (mkCl convert_df_resolved_names_format_GNR_to_Phylomatic_in i_resource_SetOfResolvedName)) (mkS (mkCl convert_df_resolved_names_format_GNR_to_Phylomatic_out o_resource_SetOfResolvedName ));
        f_phylotastic_GetChronograms_ScaledSpeciesTree_DateLife_POST i_phylomatic_method i_resource_speciesTree o_resource_speciesTree_with_BranchLengths = mkS and_Conj (mkS (mkCl phylotastic_GetChronograms_ScaledSpeciesTree_DateLife_POST_in (mkV2 "require") (mkNP and_Conj i_phylomatic_method i_resource_speciesTree))) (mkS (mkCl phylotastic_GetChronograms_ScaledSpeciesTree_DateLife_POST_out (mkV2 "return") o_resource_speciesTree_with_BranchLengths));
        f_convert_gene_tree_format_PhyloTree_to_phylo4Tree i_resource_geneTree o_resource_geneTree = mkS and_Conj (mkS (mkCl convert_gene_tree_format_PhyloTree_to_phylo4Tree_in i_resource_geneTree)) (mkS (mkCl convert_gene_tree_format_PhyloTree_to_phylo4Tree_out o_resource_geneTree ));
        f_taxon_to_species_operation i_resource_taxon o_resource_SetOfSciName o_resource_taxon = mkS and_Conj (mkS (mkCl taxon_to_species_operation_in i_resource_taxon)) (mkS (mkCl taxon_to_species_operation_out (mkNP both7and_DConj o_resource_SetOfSciName o_resource_taxon)));
        f_convert_df_taxons_format_5_to_OT i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS and_Conj (mkS (mkCl convert_df_taxons_format_5_to_OT_in (mkV2 "require") i_resource_SetOfTaxon)) (mkS (mkCl convert_df_taxons_format_5_to_OT_out (mkV2 "return") o_resource_SetOfTaxon ));
        f_phylogeny_based_extraction i_resource_SetOfResolvedName o_resource_speciesTree = mkS and_Conj (mkS (mkCl phylogeny_based_extraction_in i_resource_SetOfResolvedName)) (mkS (mkCl phylogeny_based_extraction_out o_resource_speciesTree ));
        f_convert_df_resolved_names_format_4_to_6 i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS (mkCl convert_df_resolved_names_format_4_to_6_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") o_resource_SetOfResolvedName ));
        f_convert_gene_tree_format_NewickTree_to_ALL_COMBO i_resource_geneTree o_resource_geneTree o_resource_geneTree o_resource_geneTree = mkS (mkCl convert_gene_tree_format_NewickTree_to_ALL_COMBO_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_geneTree (mkVP (mkV2 "extract") (mkNP and_Conj (mkListNP o_resource_geneTree (mkListNP o_resource_geneTree o_resource_geneTree))) ));
        f_gene_tree_scaling i_resource_geneTree o_resource_geneTree = mkS (mkCl gene_tree_scaling_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_geneTree (mkVP (mkV2 "extract") o_resource_geneTree ));
        f_tree_scaling_operation i_resource_Tree o_resource_Tree = mkS and_Conj (mkS (mkCl tree_scaling_operation_in i_resource_Tree)) (mkS (mkCl tree_scaling_operation_out o_resource_Tree ));
        f_look_up_taxonomy o_resource_taxon = mkS (mkCl look_up_taxonomy_out o_resource_taxon);
        f_phylotastic_GetPhylogeneticTree_Phylomatic_POST i_resource_SetOfResolvedName o_resource_speciesTree o_resource_Tree = mkS (mkCl phylotastic_GetPhylogeneticTree_Phylomatic_POST_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") (mkNP and_Conj o_resource_speciesTree o_resource_Tree) ));
        f_convert_species_tree_format_1_to_2 i_resource_speciesTree o_resource_speciesTree = mkS (mkCl convert_species_tree_format_1_to_2_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_speciesTree (mkVP (mkV2 "extract") o_resource_speciesTree ));
        f_phylotastic_GetAllSpeciesFromTaxon_OT_GET i_resource_taxon o_resource_SetOfSciName o_resource_taxon = mkS (mkCl phylotastic_GetAllSpeciesFromTaxon_OT_GET_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_taxon (mkVP (mkV2 "extract") (mkNP and_Conj o_resource_SetOfSciName o_resource_taxon) ));
        f_phylotastic_GetSpeciesScientificNameFromCommonName_NCBI_GET i_resource_CommonName o_resource_ScientificName o_resource_WebURL = mkS and_Conj (mkS (mkCl phylotastic_GetSpeciesScientificNameFromCommonName_NCBI_GET_in (mkV2 "require") i_resource_CommonName)) (mkS (mkCl phylotastic_GetSpeciesScientificNameFromCommonName_NCBI_GET_out (mkV2 "return") (mkNP and_Conj o_resource_ScientificName o_resource_WebURL)));
        f_phylotastic_GetReconciliationTree_GET i_resource_geneTree i_resource_speciesTree o_resource_reconcileTree = mkS and_Conj (mkS (mkCl phylotastic_GetReconciliationTree_GET_in (mkNP both7and_DConj i_resource_geneTree i_resource_speciesTree))) (mkS (mkCl phylotastic_GetReconciliationTree_GET_out o_resource_reconcileTree));
        f_convert_gene_tree_format_1_to_2 i_resource_geneTree o_resource_geneTree = mkS and_Conj (mkS (mkCl convert_gene_tree_format_1_to_2_in i_resource_geneTree)) (mkS (mkCl convert_gene_tree_format_1_to_2_out o_resource_geneTree ));
        f_convert_df_resolved_names_format_GNR_to_OT i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS (mkCl convert_df_resolved_names_format_GNR_to_OT_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") o_resource_SetOfResolvedName ));
        f_tree_transformation i_resource_Tree o_resource_Tree = mkS and_Conj (mkS (mkCl tree_transformation_in (mkV2 "require") i_resource_Tree)) (mkS (mkCl tree_transformation_out (mkV2 "return") o_resource_Tree ));
        f_country_code_to_name i_resource_CountryCode o_resource_CountryName = mkS (mkCl country_code_to_name_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_CountryCode (mkVP (mkV2 "extract") o_resource_CountryName ));
        f_phylotastic_GenerateGeneTree_From_Genes i_resource_SetOfGeneStrings o_resource_geneTree = mkS (mkCl phylotastic_GenerateGeneTree_From_Genes_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfGeneStrings (mkVP (mkV2 "extract") o_resource_geneTree ));
        f_convert_df_taxons_format_1_to_3 i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS and_Conj (mkS (mkCl convert_df_taxons_format_1_to_3_in (mkV2 "require") i_resource_SetOfTaxon)) (mkS (mkCl convert_df_taxons_format_1_to_3_out (mkV2 "return") o_resource_SetOfTaxon ));
        f_convert_gene_tree_format_NMSU_to_NewickTree i_resource_geneTree o_resource_geneTree = mkS (mkCl convert_gene_tree_format_NMSU_to_NewickTree_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_geneTree (mkVP (mkV2 "extract") o_resource_geneTree ));
        f_convert_df_sci_names_format_5_to_OT i_resource_SetOfSciName o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl convert_df_sci_names_format_5_to_OT_in (mkV2 "require") i_resource_SetOfSciName)) (mkS (mkCl convert_df_sci_names_format_5_to_OT_out (mkV2 "return") o_resource_SetOfSciName ));
        f_phylotastic_GetPhylogeneticTree_PhyloT_GET i_resource_SetOfTaxon o_resource_speciesTree o_resource_Tree = mkS (mkCl phylotastic_GetPhylogeneticTree_PhyloT_GET_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfTaxon (mkVP (mkV2 "extract") (mkNP and_Conj o_resource_speciesTree o_resource_Tree) ));
        f_convert_df_resolved_names_format_3_to_5 i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS and_Conj (mkS (mkCl convert_df_resolved_names_format_3_to_5_in (mkV2 "require") i_resource_SetOfResolvedName)) (mkS (mkCl convert_df_resolved_names_format_3_to_5_out (mkV2 "return") o_resource_SetOfResolvedName ));
        f_names_operation o_resource_SetOfNames = mkS (mkCl names_operation_out o_resource_SetOfNames);
        f_phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET i_resource_WebURL o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET_in i_resource_WebURL)) (mkS (mkCl phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET_out o_resource_SetOfSciName ));
        f_scientific_name_to_taxonomy i_resource_ScientificName o_resource_taxon = mkS (mkCl scientific_name_to_taxonomy_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_ScientificName (mkVP (mkV2 "extract") o_resource_taxon ));
        f_convert_df_resolved_names_format_1_to_3 i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS (mkCl convert_df_resolved_names_format_1_to_3_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") o_resource_SetOfResolvedName ));
        f_taxon_to_species_by_genome i_resource_taxon o_resource_taxon o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl i_resource_taxon taxon_to_species_by_genome_in)) (mkS (mkCl (mkNP both7and_DConj o_resource_taxon o_resource_SetOfSciName) taxon_to_species_by_genome_out));
        f_names_extraction_operation o_resource_SetOfSciName = mkS (mkCl names_extraction_operation_out o_resource_SetOfSciName);
        f_phylotastic_GetPhylogeneticTree_PhyloT_POST i_resource_SetOfTaxon o_resource_speciesTree o_resource_Tree = mkS and_Conj (mkS (mkCl phylotastic_GetPhylogeneticTree_PhyloT_POST_in i_resource_SetOfTaxon)) (mkS (mkCl phylotastic_GetPhylogeneticTree_PhyloT_POST_out (mkNP both7and_DConj o_resource_speciesTree o_resource_Tree)));
        f_convert_df_resolved_names_format_5_to_PhyloT i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS (mkCl convert_df_resolved_names_format_5_to_PhyloT_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") o_resource_SetOfResolvedName ));
        f_names_conversion_operation o_resource_SetOfNames = mkS (mkCl names_conversion_operation_out o_resource_SetOfNames);
        f_phylotastic_FindScientificNamesFromFreeText_GNRD_GET i_resource_FreeText o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl phylotastic_FindScientificNamesFromFreeText_GNRD_GET_in (mkV2 "require") i_resource_FreeText)) (mkS (mkCl phylotastic_FindScientificNamesFromFreeText_GNRD_GET_out (mkV2 "return") o_resource_SetOfSciName ));
        f_convert_df_taxons_format_GNR_to_OT i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS and_Conj (mkS (mkCl convert_df_taxons_format_GNR_to_OT_in i_resource_SetOfTaxon)) (mkS (mkCl convert_df_taxons_format_GNR_to_OT_out o_resource_SetOfTaxon ));
        f_names_resolution_operation i_resource_SetOfSciName o_resource_SetOfTaxon o_resource_SetOfResolvedName = mkS and_Conj (mkS (mkCl i_resource_SetOfSciName names_resolution_operation_in)) (mkS (mkCl (mkNP both7and_DConj o_resource_SetOfTaxon o_resource_SetOfResolvedName) names_resolution_operation_out));
        f_common_name_to_scientific_name i_resource_CommonName o_resource_ScientificName o_resource_WebURL o_resource_SetOfNames = mkS (mkCl common_name_to_scientific_name_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_CommonName (mkVP (mkV2 "extract") (mkNP and_Conj (mkListNP o_resource_ScientificName (mkListNP o_resource_WebURL o_resource_SetOfNames))) ));
        f_gene_based_extraction i_resource_SetOfGeneStrings o_resource_geneTree o_resource_geneTree = mkS and_Conj (mkS (mkCl i_resource_SetOfGeneStrings gene_based_extraction_in)) (mkS (mkCl (mkNP both7and_DConj o_resource_geneTree o_resource_geneTree) gene_based_extraction_out));
        f_convert_df_resolved_names_format_5_to_Phylomatic i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS (mkCl convert_df_resolved_names_format_5_to_Phylomatic_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") o_resource_SetOfResolvedName ));
        f_phylotastic_ExtractSpeciesNames_From_Gene_Tree_GET i_resource_geneTree o_resource_SetOfSciName = mkS (mkCl phylotastic_ExtractSpeciesNames_From_Gene_Tree_GET_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_geneTree (mkVP (mkV2 "extract") o_resource_SetOfSciName ));
        f_convert_df_taxons_format_GNR_to_Phylomatic i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS and_Conj (mkS (mkCl convert_df_taxons_format_GNR_to_Phylomatic_in i_resource_SetOfTaxon)) (mkS (mkCl convert_df_taxons_format_GNR_to_Phylomatic_out o_resource_SetOfTaxon ));
        f_taxonomy_based_extraction i_resource_SetOfTaxon o_resource_speciesTree = mkS and_Conj (mkS (mkCl taxonomy_based_extraction_in (mkV2 "require") i_resource_SetOfTaxon)) (mkS (mkCl taxonomy_based_extraction_out (mkV2 "return") o_resource_speciesTree ));
        f_look_up_scientific_name o_resource_ScientificName = mkS (mkCl look_up_scientific_name_out o_resource_ScientificName);
        f_phylotastic_GeneTree_Scaling i_resource_geneTree o_resource_geneTree = mkS and_Conj (mkS (mkCl phylotastic_GeneTree_Scaling_in (mkV2 "require") i_resource_geneTree)) (mkS (mkCl phylotastic_GeneTree_Scaling_out (mkV2 "return") o_resource_geneTree ));
        f_convert_df_resolved_names_format_5_to_OT i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS (mkCl convert_df_resolved_names_format_5_to_OT_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") o_resource_SetOfResolvedName ));
        f_convert_df_text_format_raw_to_plain i_resource_FreeText o_resource_FreeText = mkS and_Conj (mkS (mkCl convert_df_text_format_raw_to_plain_in (mkV2 "require") i_resource_FreeText)) (mkS (mkCl convert_df_text_format_raw_to_plain_out (mkV2 "return") o_resource_FreeText ));
        f_phylotastic_FindScientificNamesFromWeb_GNRD_GET i_resource_WebURL o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl phylotastic_FindScientificNamesFromWeb_GNRD_GET_in (mkV2 "require") i_resource_WebURL)) (mkS (mkCl phylotastic_FindScientificNamesFromWeb_GNRD_GET_out (mkV2 "return") o_resource_SetOfSciName ));
        f_convert_species_tree_format_pHYLIPTree_to_PhyloTree i_resource_speciesTree o_resource_speciesTree = mkS and_Conj (mkS (mkCl convert_species_tree_format_pHYLIPTree_to_PhyloTree_in (mkV2 "require") i_resource_speciesTree)) (mkS (mkCl convert_species_tree_format_pHYLIPTree_to_PhyloTree_out (mkV2 "return") o_resource_speciesTree ));
        f_phylotastic_GetMetadata_Chronogram_DateLife_POST i_resource_speciesTree o_resource_metadata_tree_scaling = mkS and_Conj (mkS (mkCl phylotastic_GetMetadata_Chronogram_DateLife_POST_in i_resource_speciesTree)) (mkS (mkCl phylotastic_GetMetadata_Chronogram_DateLife_POST_out o_resource_metadata_tree_scaling ));
        f_phylotastic_ResolvedScientificNames_GNR_TNRS_GET i_resource_SetOfSciName o_resource_SetOfTaxon o_resource_SetOfResolvedName = mkS and_Conj (mkS (mkCl phylotastic_ResolvedScientificNames_GNR_TNRS_GET_in (mkV2 "require") i_resource_SetOfSciName)) (mkS (mkCl phylotastic_ResolvedScientificNames_GNR_TNRS_GET_out (mkV2 "return") (mkNP and_Conj o_resource_SetOfTaxon o_resource_SetOfResolvedName)));
        f_tree_visualization i_resource_Tree o_resource_Image = mkS and_Conj (mkS (mkCl tree_visualization_in (mkV2 "require") i_resource_Tree)) (mkS (mkCl tree_visualization_out (mkV2 "return") o_resource_Image ));
        f_convert_df_resolved_names_format_GNR_to_PhyloT i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS and_Conj (mkS (mkCl convert_df_resolved_names_format_GNR_to_PhyloT_in (mkV2 "require") i_resource_SetOfResolvedName)) (mkS (mkCl convert_df_resolved_names_format_GNR_to_PhyloT_out (mkV2 "return") o_resource_SetOfResolvedName ));
        f_convert_df_taxons_format_6_to_ALL_COMBO i_resource_SetOfTaxon o_resource_SetOfTaxon o_resource_SetOfTaxon o_resource_SetOfTaxon = mkS and_Conj (mkS (mkCl convert_df_taxons_format_6_to_ALL_COMBO_in i_resource_SetOfTaxon)) (mkS (mkCl convert_df_taxons_format_6_to_ALL_COMBO_out (mkNP and_Conj (mkListNP o_resource_SetOfTaxon (mkListNP o_resource_SetOfTaxon o_resource_SetOfTaxon)))));
        f_convert_species_tree_format_Phylo4Tree_to_PhyloTree i_resource_speciesTree o_resource_speciesTree = mkS and_Conj (mkS (mkCl convert_species_tree_format_Phylo4Tree_to_PhyloTree_in i_resource_speciesTree)) (mkS (mkCl convert_species_tree_format_Phylo4Tree_to_PhyloTree_out o_resource_speciesTree ));
        f_convert_df_taxons_format_5_to_PhyloT i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS (mkCl convert_df_taxons_format_5_to_PhyloT_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfTaxon (mkVP (mkV2 "extract") o_resource_SetOfTaxon ));
        f_convert_df_taxons_format_GNR_to_PhyloT i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS and_Conj (mkS (mkCl convert_df_taxons_format_GNR_to_PhyloT_in i_resource_SetOfTaxon)) (mkS (mkCl convert_df_taxons_format_GNR_to_PhyloT_out o_resource_SetOfTaxon ));
        f_convert_gene_tree_format_pHYLIPTree_to_PhyloTree i_resource_geneTree o_resource_geneTree = mkS and_Conj (mkS (mkCl convert_gene_tree_format_pHYLIPTree_to_PhyloTree_in i_resource_geneTree)) (mkS (mkCl convert_gene_tree_format_pHYLIPTree_to_PhyloTree_out o_resource_geneTree ));
        f_species_tree_scaling i_resource_speciesTree i_phylomatic_method o_resource_speciesTree_with_BranchLengths = mkS and_Conj (mkS (mkCl species_tree_scaling_in (mkNP both7and_DConj i_resource_speciesTree i_phylomatic_method))) (mkS (mkCl species_tree_scaling_out o_resource_speciesTree_with_BranchLengths));
        f_convert_df_sci_names_format_5_to_GNR i_resource_SetOfSciName o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl convert_df_sci_names_format_5_to_GNR_in (mkV2 "require") i_resource_SetOfSciName)) (mkS (mkCl convert_df_sci_names_format_5_to_GNR_out (mkV2 "return") o_resource_SetOfSciName ));
        f_convert_species_tree_format_PhyloTree_to_NMSU i_resource_speciesTree o_resource_speciesTree = mkS and_Conj (mkS (mkCl convert_species_tree_format_PhyloTree_to_NMSU_in (mkV2 "require") i_resource_speciesTree)) (mkS (mkCl convert_species_tree_format_PhyloTree_to_NMSU_out (mkV2 "return") o_resource_speciesTree ));
        f_convert_gene_tree_format_Phylo4Tree_to_PhyloTree i_resource_geneTree o_resource_geneTree = mkS (mkCl convert_gene_tree_format_Phylo4Tree_to_PhyloTree_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_geneTree (mkVP (mkV2 "extract") o_resource_geneTree ));
        f_convert_df_sci_names_format_4_to_6 i_resource_SetOfSciName o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl convert_df_sci_names_format_4_to_6_in (mkV2 "require") i_resource_SetOfSciName)) (mkS (mkCl convert_df_sci_names_format_4_to_6_out (mkV2 "return") o_resource_SetOfSciName ));
        f_convert_species_tree_format_NewickTree_to_ALL_COMBO i_resource_speciesTree o_resource_speciesTree o_resource_speciesTree o_resource_speciesTree = mkS and_Conj (mkS (mkCl convert_species_tree_format_NewickTree_to_ALL_COMBO_in (mkV2 "require") i_resource_speciesTree)) (mkS (mkCl convert_species_tree_format_NewickTree_to_ALL_COMBO_out (mkV2 "return") (mkNP and_Conj (mkListNP o_resource_speciesTree (mkListNP o_resource_speciesTree o_resource_speciesTree)))));
        f_tree_extraction_operation o_resource_Tree = mkS (mkCl tree_extraction_operation_out o_resource_Tree);
        f_tree_generation o_resource_Tree = mkS (mkCl tree_generation_out o_resource_Tree);
        f_google_ConvertCountryCodeToName_GET i_resource_CountryCode o_resource_CountryName = mkS (mkCl google_ConvertCountryCodeToName_GET_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_CountryCode (mkVP (mkV2 "extract") o_resource_CountryName ));
        f_convert_gene_tree_format_PhyloTree_to_NMSU i_resource_geneTree o_resource_geneTree = mkS and_Conj (mkS (mkCl convert_gene_tree_format_PhyloTree_to_NMSU_in i_resource_geneTree)) (mkS (mkCl convert_gene_tree_format_PhyloTree_to_NMSU_out o_resource_geneTree ));
        f_convert_df_resolved_names_format_2_to_4 i_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS (mkCl convert_df_resolved_names_format_2_to_4_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") o_resource_SetOfResolvedName ));
        f_convert_df_resolved_names_format_6_to_ALL_COMBO i_resource_SetOfResolvedName o_resource_SetOfResolvedName o_resource_SetOfResolvedName o_resource_SetOfResolvedName = mkS (mkCl convert_df_resolved_names_format_6_to_ALL_COMBO_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfResolvedName (mkVP (mkV2 "extract") (mkNP and_Conj (mkListNP o_resource_SetOfResolvedName (mkListNP o_resource_SetOfResolvedName o_resource_SetOfResolvedName))) ));
        f_convert_species_tree_format_2_to_pHYLIPTree i_resource_speciesTree o_resource_speciesTree = mkS and_Conj (mkS (mkCl convert_species_tree_format_2_to_pHYLIPTree_in i_resource_speciesTree)) (mkS (mkCl convert_species_tree_format_2_to_pHYLIPTree_out o_resource_speciesTree ));
        f_tree_metadata_chronogram i_resource_speciesTree o_resource_metadata_tree_scaling = mkS and_Conj (mkS (mkCl tree_metadata_chronogram_in i_resource_speciesTree)) (mkS (mkCl tree_metadata_chronogram_out o_resource_metadata_tree_scaling ));
        f_tree_retrieval_operation o_resource_Tree = mkS (mkCl tree_retrieval_operation_out o_resource_Tree);
        f_openTree_GetTaxonomyNameFromSciName_GET i_resource_ScientificName o_resource_taxon = mkS and_Conj (mkS (mkCl openTree_GetTaxonomyNameFromSciName_GET_in i_resource_ScientificName)) (mkS (mkCl openTree_GetTaxonomyNameFromSciName_GET_out o_resource_taxon ));
        f_convert_df_taxons_format_4_to_6 i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS and_Conj (mkS (mkCl convert_df_taxons_format_4_to_6_in i_resource_SetOfTaxon)) (mkS (mkCl convert_df_taxons_format_4_to_6_out o_resource_SetOfTaxon ));
        f_convert_gene_tree_format_2_to_pHYLIPTree i_resource_geneTree o_resource_geneTree = mkS and_Conj (mkS (mkCl convert_gene_tree_format_2_to_pHYLIPTree_in (mkV2 "require") i_resource_geneTree)) (mkS (mkCl convert_gene_tree_format_2_to_pHYLIPTree_out (mkV2 "return") o_resource_geneTree ));
        f_convert_df_taxons_format_5_to_Phylomatic i_resource_SetOfTaxon o_resource_SetOfTaxon = mkS (mkCl convert_df_taxons_format_5_to_Phylomatic_in (mkV2V (mkV "use") noPrep to_Prep) i_resource_SetOfTaxon (mkVP (mkV2 "extract") o_resource_SetOfTaxon ));
        f_phylotastic_GetPhylogeneticTree_OT_POST i_resource_SetOfTaxon o_resource_speciesTree o_resource_Tree = mkS and_Conj (mkS (mkCl phylotastic_GetPhylogeneticTree_OT_POST_in i_resource_SetOfTaxon)) (mkS (mkCl phylotastic_GetPhylogeneticTree_OT_POST_out (mkNP both7and_DConj o_resource_speciesTree o_resource_Tree)));
        f_names_extraction_web i_resource_WebURL o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl names_extraction_web_in (mkV2 "require") i_resource_WebURL)) (mkS (mkCl names_extraction_web_out (mkV2 "return") o_resource_SetOfSciName ));
        f_convert_df_sci_names_format_6_to_GNR i_resource_SetOfSciName o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl convert_df_sci_names_format_6_to_GNR_in (mkV2 "require") i_resource_SetOfSciName)) (mkS (mkCl convert_df_sci_names_format_6_to_GNR_out (mkV2 "return") o_resource_SetOfSciName ));
        f_phylotastic_GetPhylogeneticTree_Phylomatic_GET i_resource_SetOfResolvedName o_resource_speciesTree o_resource_Tree = mkS and_Conj (mkS (mkCl phylotastic_GetPhylogeneticTree_Phylomatic_GET_in (mkV2 "require") i_resource_SetOfResolvedName)) (mkS (mkCl phylotastic_GetPhylogeneticTree_Phylomatic_GET_out (mkV2 "return") (mkNP and_Conj o_resource_speciesTree o_resource_Tree)));
        f_names_extraction_tree i_resource_geneTree o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl names_extraction_tree_in (mkV2 "require") i_resource_geneTree)) (mkS (mkCl names_extraction_tree_out (mkV2 "return") o_resource_SetOfSciName ));
        f_names_extraction_text i_resource_FreeText o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl names_extraction_text_in (mkV2 "require") i_resource_FreeText)) (mkS (mkCl names_extraction_text_out (mkV2 "return") o_resource_SetOfSciName ));
        f_phylotastic_ResolvedScientificNames_OT_TNRS_POST i_resource_SetOfSciName o_resource_SetOfTaxon o_resource_SetOfResolvedName = mkS and_Conj (mkS (mkCl phylotastic_ResolvedScientificNames_OT_TNRS_POST_in (mkV2 "require") i_resource_SetOfSciName)) (mkS (mkCl phylotastic_ResolvedScientificNames_OT_TNRS_POST_out (mkV2 "return") (mkNP and_Conj o_resource_SetOfTaxon o_resource_SetOfResolvedName)));
        f_convert_df_sci_names_format_2_to_4 i_resource_SetOfSciName o_resource_SetOfSciName = mkS and_Conj (mkS (mkCl convert_df_sci_names_format_2_to_4_in (mkV2 "require") i_resource_SetOfSciName)) (mkS (mkCl convert_df_sci_names_format_2_to_4_out (mkV2 "return") o_resource_SetOfSciName ));
        d_i_phylotastic_FindScientificNamesFromWeb_GNRD_GET i_resource_WebURL d_http_url = mkS (mkCl i_resource_WebURL (mkV2 "use") d_http_url);
        d_i_phylotastic_FindScientificNamesFromFreeText_GNRD_GET i_resource_FreeText d_plain_text = mkS (mkCl i_resource_FreeText (mkV2 "use") d_plain_text);
        d_i_phylotastic_ResolvedScientificNames_GNR_TNRS_GET i_resource_SetOfSciName d_raw_names_format_GNR = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_GNR);
        d_i_phylotastic_ResolvedScientificNames_GNR_TNRS_POST i_resource_SetOfSciName d_raw_names_format_GNR = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_GNR);
        d_i_phylotastic_ResolvedScientificNames_OT_TNRS_GET i_resource_SetOfSciName d_raw_names_format_OT = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_OT);
        d_i_phylotastic_ResolvedScientificNames_OT_TNRS_POST i_resource_SetOfSciName d_raw_names_format_OT = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_OT);
        d_i_phylotastic_GetAllSpeciesFromTaxon_OT_GET i_resource_taxon d_string = mkS (mkCl i_resource_taxon (mkV2 "use") d_string);
        d_i_phylotastic_GetPhylogeneticTree_OT_GET i_resource_SetOfTaxon d_resolved_names_format_OT = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_OT);
        d_i_phylotastic_GetPhylogeneticTree_OT_POST i_resource_SetOfTaxon d_resolved_names_format_OT = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_OT);
        d_i_phylotastic_GetPhylogeneticTree_PhyloT_GET i_resource_SetOfTaxon d_resolved_names_format_PhyloT = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_PhyloT);
        d_i_phylotastic_GetPhylogeneticTree_PhyloT_POST i_resource_SetOfTaxon d_resolved_names_format_PhyloT = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_PhyloT);
        d_i_phylotastic_GetPhylogeneticTree_Phylomatic_GET i_resource_SetOfResolvedName d_resolved_names_format_Phylomatic = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_Phylomatic);
        d_i_phylotastic_GetPhylogeneticTree_Phylomatic_POST i_resource_SetOfResolvedName d_resolved_names_format_Phylomatic = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_Phylomatic);
        d_i_phylotastic_GetAllSpeciesFromTaxon_Country_OT_GET i_resource_taxon d_string = mkS (mkCl i_resource_taxon (mkV2 "use") d_string);
        d_i_phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET i_resource_taxon d_string = mkS (mkCl i_resource_taxon (mkV2 "use") d_string);
        d_i_google_ConvertCountryCodeToName_GET i_resource_CountryCode d_integer = mkS (mkCl i_resource_CountryCode (mkV2 "use") d_integer);
        d_i_openTree_GetTaxonomyNameFromSciName_GET i_resource_ScientificName d_string = mkS (mkCl i_resource_ScientificName (mkV2 "use") d_string);
        d_i_phylotastic_GetSpeciesScientificNameFromCommonName_NCBI_GET i_resource_CommonName d_string = mkS (mkCl i_resource_CommonName (mkV2 "use") d_string);
        d_i_phylotastic_CompareTrees_Sym_Dendropy_POST i_resource_speciesTree d_newickTree = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_newickTree);
        d_i_phylotastic_CompareTrees_BL_Dendropy_POST i_resource_speciesTree d_newickTree = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_newickTree);
        d_i_phylotastic_GetChronograms_ScaledSpeciesTree_DateLife_POST i_phylomatic_method d_string = mkS (mkCl i_phylomatic_method (mkV2 "use") d_string);
        d_i_phylotastic_GetMetadata_Chronogram_DateLife_POST i_resource_speciesTree d_newickTree = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_newickTree);
        d_i_phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET i_resource_WebURL d_data_format_E = mkS (mkCl i_resource_WebURL (mkV2 "use") d_data_format_E);
        d_i_phylotastic_ExtractSpeciesNames_From_Gene_Tree_GET i_resource_geneTree d_newickTree = mkS (mkCl i_resource_geneTree (mkV2 "use") d_newickTree);
        d_i_phylotastic_GetReconciliationTree_GET i_resource_geneTree d_newickTree = mkS (mkCl i_resource_geneTree (mkV2 "use") d_newickTree);
        d_i_phylotastic_GenerateGeneTree_From_Genes i_resource_SetOfGeneStrings d_list_of_strings = mkS (mkCl i_resource_SetOfGeneStrings (mkV2 "use") d_list_of_strings);
        d_i_phylotastic_GeneTree_Scaling i_resource_geneTree d_newickTree = mkS (mkCl i_resource_geneTree (mkV2 "use") d_newickTree);
        d_i_convert_df_text_format_raw_to_plain i_resource_FreeText d_raw_text = mkS (mkCl i_resource_FreeText (mkV2 "use") d_raw_text);
        d_i_convert_df_sci_names_format_1_to_3 i_resource_SetOfSciName d_raw_names_format_1 = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_1);
        d_i_convert_df_sci_names_format_3_to_5 i_resource_SetOfSciName d_raw_names_format_3 = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_3);
        d_i_convert_df_sci_names_format_5_to_GNR i_resource_SetOfSciName d_raw_names_format_5 = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_5);
        d_i_convert_df_sci_names_format_5_to_OT i_resource_SetOfSciName d_raw_names_format_5 = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_5);
        d_i_convert_df_sci_names_format_2_to_4 i_resource_SetOfSciName d_raw_names_format_2 = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_2);
        d_i_convert_df_sci_names_format_4_to_6 i_resource_SetOfSciName d_raw_names_format_4 = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_4);
        d_i_convert_df_sci_names_format_6_to_GNR i_resource_SetOfSciName d_raw_names_format_6 = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_6);
        d_i_convert_df_sci_names_format_6_to_OT i_resource_SetOfSciName d_raw_names_format_6 = mkS (mkCl i_resource_SetOfSciName (mkV2 "use") d_raw_names_format_6);
        d_i_convert_df_resolved_names_format_GNR_to_OT i_resource_SetOfResolvedName d_resolved_names_format_GNR = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_GNR);
        d_i_convert_df_resolved_names_format_GNR_to_Phylomatic i_resource_SetOfResolvedName d_resolved_names_format_GNR = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_GNR);
        d_i_convert_df_resolved_names_format_GNR_to_PhyloT i_resource_SetOfResolvedName d_resolved_names_format_GNR = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_GNR);
        d_i_convert_df_resolved_names_format_1_to_3 i_resource_SetOfResolvedName d_resolved_names_format_1 = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_1);
        d_i_convert_df_resolved_names_format_3_to_5 i_resource_SetOfResolvedName d_resolved_names_format_3 = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_3);
        d_i_convert_df_resolved_names_format_5_to_OT i_resource_SetOfResolvedName d_resolved_names_format_5 = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_5);
        d_i_convert_df_resolved_names_format_5_to_PhyloT i_resource_SetOfResolvedName d_resolved_names_format_5 = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_5);
        d_i_convert_df_resolved_names_format_5_to_Phylomatic i_resource_SetOfResolvedName d_resolved_names_format_5 = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_5);
        d_i_convert_df_resolved_names_format_2_to_4 i_resource_SetOfResolvedName d_resolved_names_format_2 = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_2);
        d_i_convert_df_resolved_names_format_4_to_6 i_resource_SetOfResolvedName d_resolved_names_format_4 = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_4);
        d_i_convert_df_resolved_names_format_6_to_ALL_COMBO i_resource_SetOfResolvedName d_resolved_names_format_6 = mkS (mkCl i_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_6);
        d_i_convert_df_taxons_format_GNR_to_OT i_resource_SetOfTaxon d_resolved_names_format_GNR = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_GNR);
        d_i_convert_df_taxons_format_GNR_to_Phylomatic i_resource_SetOfTaxon d_resolved_names_format_GNR = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_GNR);
        d_i_convert_df_taxons_format_GNR_to_PhyloT i_resource_SetOfTaxon d_resolved_names_format_GNR = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_GNR);
        d_i_convert_df_taxons_format_1_to_3 i_resource_SetOfTaxon d_resolved_names_format_1 = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_1);
        d_i_convert_df_taxons_format_3_to_5 i_resource_SetOfTaxon d_resolved_names_format_3 = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_3);
        d_i_convert_df_taxons_format_5_to_OT i_resource_SetOfTaxon d_resolved_names_format_5 = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_5);
        d_i_convert_df_taxons_format_5_to_PhyloT i_resource_SetOfTaxon d_resolved_names_format_5 = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_5);
        d_i_convert_df_taxons_format_5_to_Phylomatic i_resource_SetOfTaxon d_resolved_names_format_5 = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_5);
        d_i_convert_df_taxons_format_2_to_4 i_resource_SetOfTaxon d_resolved_names_format_2 = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_2);
        d_i_convert_df_taxons_format_4_to_6 i_resource_SetOfTaxon d_resolved_names_format_4 = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_4);
        d_i_convert_df_taxons_format_6_to_ALL_COMBO i_resource_SetOfTaxon d_resolved_names_format_6 = mkS (mkCl i_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_6);
        d_i_convert_species_tree_format_NewickTree_to_ALL_COMBO i_resource_speciesTree d_newickTree = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_newickTree);
        d_i_convert_gene_tree_format_NewickTree_to_ALL_COMBO i_resource_geneTree d_newickTree = mkS (mkCl i_resource_geneTree (mkV2 "use") d_newickTree);
        d_i_convert_species_tree_format_PhyloTree_to_NMSU i_resource_speciesTree d_phyloTree = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_phyloTree);
        d_i_convert_gene_tree_format_PhyloTree_to_NMSU i_resource_geneTree d_phyloTree = mkS (mkCl i_resource_geneTree (mkV2 "use") d_phyloTree);
        d_i_convert_species_tree_format_NMSU_to_NewickTree i_resource_speciesTree d_nmsu_tree_format = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_nmsu_tree_format);
        d_i_convert_gene_tree_format_NMSU_to_NewickTree i_resource_geneTree d_nmsu_tree_format = mkS (mkCl i_resource_geneTree (mkV2 "use") d_nmsu_tree_format);
        d_i_convert_species_tree_format_PhyloTree_to_phylo4Tree i_resource_speciesTree d_phyloTree = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_phyloTree);
        d_i_convert_gene_tree_format_PhyloTree_to_phylo4Tree i_resource_geneTree d_phyloTree = mkS (mkCl i_resource_geneTree (mkV2 "use") d_phyloTree);
        d_i_convert_species_tree_format_Phylo4Tree_to_PhyloTree i_resource_speciesTree d_phylo4Tree = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_phylo4Tree);
        d_i_convert_gene_tree_format_Phylo4Tree_to_PhyloTree i_resource_geneTree d_phylo4Tree = mkS (mkCl i_resource_geneTree (mkV2 "use") d_phylo4Tree);
        d_i_convert_species_tree_format_1_to_2 i_resource_speciesTree d_tree_format_1 = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_tree_format_1);
        d_i_convert_gene_tree_format_1_to_2 i_resource_geneTree d_tree_format_1 = mkS (mkCl i_resource_geneTree (mkV2 "use") d_tree_format_1);
        d_i_convert_species_tree_format_2_to_pHYLIPTree i_resource_speciesTree d_tree_format_2 = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_tree_format_2);
        d_i_convert_gene_tree_format_2_to_pHYLIPTree i_resource_geneTree d_tree_format_2 = mkS (mkCl i_resource_geneTree (mkV2 "use") d_tree_format_2);
        d_i_convert_species_tree_format_pHYLIPTree_to_PhyloTree i_resource_speciesTree d_pHYLIPTree = mkS (mkCl i_resource_speciesTree (mkV2 "use") d_pHYLIPTree);
        d_i_convert_gene_tree_format_pHYLIPTree_to_PhyloTree i_resource_geneTree d_pHYLIPTree = mkS (mkCl i_resource_geneTree (mkV2 "use") d_pHYLIPTree);
        d_o_phylotastic_FindScientificNamesFromWeb_GNRD_GET o_resource_SetOfSciName d_raw_names_format_2 = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_2);
        d_o_phylotastic_FindScientificNamesFromFreeText_GNRD_GET o_resource_SetOfSciName d_raw_names_format_1 = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_1);
        d_o_phylotastic_ResolvedScientificNames_GNR_TNRS_GET o_resource_SetOfTaxon d_resolved_names_format_2 = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_2);
        d_o_phylotastic_ResolvedScientificNames_GNR_TNRS_POST o_resource_SetOfTaxon d_resolved_names_format_GNR = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_GNR);
        d_o_phylotastic_ResolvedScientificNames_OT_TNRS_GET o_resource_SetOfTaxon d_resolved_names_format_OT = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_OT);
        d_o_phylotastic_ResolvedScientificNames_OT_TNRS_POST o_resource_SetOfTaxon d_resolved_names_format_OT = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_OT);
        d_o_phylotastic_GetAllSpeciesFromTaxon_OT_GET o_resource_SetOfSciName d_list_of_strings = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_list_of_strings);
        d_o_phylotastic_GetPhylogeneticTree_OT_GET o_resource_speciesTree d_nmsu_tree_format = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_nmsu_tree_format);
        d_o_phylotastic_GetPhylogeneticTree_OT_POST o_resource_speciesTree d_nmsu_tree_format = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_nmsu_tree_format);
        d_o_phylotastic_GetPhylogeneticTree_PhyloT_GET o_resource_speciesTree d_newickTree = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_newickTree);
        d_o_phylotastic_GetPhylogeneticTree_PhyloT_POST o_resource_speciesTree d_newickTree = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_newickTree);
        d_o_phylotastic_GetPhylogeneticTree_Phylomatic_GET o_resource_speciesTree d_nmsu_tree_format = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_nmsu_tree_format);
        d_o_phylotastic_GetPhylogeneticTree_Phylomatic_POST o_resource_speciesTree d_nmsu_tree_format = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_nmsu_tree_format);
        d_o_phylotastic_GetAllSpeciesFromTaxon_Country_OT_GET o_resource_SetOfSciName d_list_of_strings = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_list_of_strings);
        d_o_phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET o_resource_SetOfSciName d_list_of_strings = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_list_of_strings);
        d_o_google_ConvertCountryCodeToName_GET o_resource_CountryName d_string = mkS (mkCl o_resource_CountryName (mkV2 "use") d_string);
        d_o_openTree_GetTaxonomyNameFromSciName_GET o_resource_taxon d_string = mkS (mkCl o_resource_taxon (mkV2 "use") d_string);
        d_o_phylotastic_GetSpeciesScientificNameFromCommonName_NCBI_GET o_resource_ScientificName d_string = mkS (mkCl o_resource_ScientificName (mkV2 "use") d_string);
        d_o_phylotastic_CompareTrees_Sym_Dendropy_POST o_resource_AreSameTree d_boolean = mkS (mkCl o_resource_AreSameTree (mkV2 "use") d_boolean);
        d_o_phylotastic_CompareTrees_BL_Dendropy_POST o_resource_AreSameTree d_boolean = mkS (mkCl o_resource_AreSameTree (mkV2 "use") d_boolean);
        d_o_phylotastic_GetChronograms_ScaledSpeciesTree_DateLife_POST o_resource_speciesTree_with_BranchLengths d_newickTree = mkS (mkCl o_resource_speciesTree_with_BranchLengths (mkV2 "use") d_newickTree);
        d_o_phylotastic_GetMetadata_Chronogram_DateLife_POST o_resource_metadata_tree_scaling d_list_of_strings = mkS (mkCl o_resource_metadata_tree_scaling (mkV2 "use") d_list_of_strings);
        d_o_phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET o_resource_SetOfSciName d_raw_names_format_2 = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_2);
        d_o_phylotastic_ExtractSpeciesNames_From_Gene_Tree_GET o_resource_SetOfSciName d_raw_names_format_2 = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_2);
        d_o_phylotastic_GetReconciliationTree_GET o_resource_reconcileTree d_newickTree = mkS (mkCl o_resource_reconcileTree (mkV2 "use") d_newickTree);
        d_o_phylotastic_GenerateGeneTree_From_Genes o_resource_geneTree d_phyloTree = mkS (mkCl o_resource_geneTree (mkV2 "use") d_phyloTree);
        d_o_phylotastic_GeneTree_Scaling o_resource_geneTree d_newickTree = mkS (mkCl o_resource_geneTree (mkV2 "use") d_newickTree);
        d_o_convert_df_text_format_raw_to_plain o_resource_FreeText d_plain_text = mkS (mkCl o_resource_FreeText (mkV2 "use") d_plain_text);
        d_o_convert_df_sci_names_format_1_to_3 o_resource_SetOfSciName d_raw_names_format_3 = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_3);
        d_o_convert_df_sci_names_format_3_to_5 o_resource_SetOfSciName d_raw_names_format_5 = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_5);
        d_o_convert_df_sci_names_format_5_to_GNR o_resource_SetOfSciName d_raw_names_format_GNR = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_GNR);
        d_o_convert_df_sci_names_format_5_to_OT o_resource_SetOfSciName d_raw_names_format_OT = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_OT);
        d_o_convert_df_sci_names_format_2_to_4 o_resource_SetOfSciName d_raw_names_format_4 = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_4);
        d_o_convert_df_sci_names_format_4_to_6 o_resource_SetOfSciName d_raw_names_format_6 = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_6);
        d_o_convert_df_sci_names_format_6_to_GNR o_resource_SetOfSciName d_raw_names_format_GNR = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_GNR);
        d_o_convert_df_sci_names_format_6_to_OT o_resource_SetOfSciName d_raw_names_format_OT = mkS (mkCl o_resource_SetOfSciName (mkV2 "use") d_raw_names_format_OT);
        d_o_convert_df_resolved_names_format_GNR_to_OT o_resource_SetOfResolvedName d_resolved_names_format_OT = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_OT);
        d_o_convert_df_resolved_names_format_GNR_to_Phylomatic o_resource_SetOfResolvedName d_resolved_names_format_Phylomatic = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_Phylomatic);
        d_o_convert_df_resolved_names_format_GNR_to_PhyloT o_resource_SetOfResolvedName d_resolved_names_format_PhyloT = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_PhyloT);
        d_o_convert_df_resolved_names_format_1_to_3 o_resource_SetOfResolvedName d_resolved_names_format_3 = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_3);
        d_o_convert_df_resolved_names_format_3_to_5 o_resource_SetOfResolvedName d_resolved_names_format_5 = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_5);
        d_o_convert_df_resolved_names_format_5_to_OT o_resource_SetOfResolvedName d_resolved_names_format_OT = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_OT);
        d_o_convert_df_resolved_names_format_5_to_PhyloT o_resource_SetOfResolvedName d_resolved_names_format_PhyloT = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_PhyloT);
        d_o_convert_df_resolved_names_format_5_to_Phylomatic o_resource_SetOfResolvedName d_resolved_names_format_Phylomatic = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_Phylomatic);
        d_o_convert_df_resolved_names_format_2_to_4 o_resource_SetOfResolvedName d_resolved_names_format_4 = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_4);
        d_o_convert_df_resolved_names_format_4_to_6 o_resource_SetOfResolvedName d_resolved_names_format_6 = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_6);
        d_o_convert_df_resolved_names_format_6_to_ALL_COMBO o_resource_SetOfResolvedName d_resolved_names_format_OT = mkS (mkCl o_resource_SetOfResolvedName (mkV2 "use") d_resolved_names_format_OT);
        d_o_convert_df_taxons_format_GNR_to_OT o_resource_SetOfTaxon d_resolved_names_format_OT = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_OT);
        d_o_convert_df_taxons_format_GNR_to_Phylomatic o_resource_SetOfTaxon d_resolved_names_format_Phylomatic = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_Phylomatic);
        d_o_convert_df_taxons_format_GNR_to_PhyloT o_resource_SetOfTaxon d_resolved_names_format_PhyloT = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_PhyloT);
        d_o_convert_df_taxons_format_1_to_3 o_resource_SetOfTaxon d_resolved_names_format_3 = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_3);
        d_o_convert_df_taxons_format_3_to_5 o_resource_SetOfTaxon d_resolved_names_format_5 = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_5);
        d_o_convert_df_taxons_format_5_to_OT o_resource_SetOfTaxon d_resolved_names_format_OT = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_OT);
        d_o_convert_df_taxons_format_5_to_PhyloT o_resource_SetOfTaxon d_resolved_names_format_PhyloT = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_PhyloT);
        d_o_convert_df_taxons_format_5_to_Phylomatic o_resource_SetOfTaxon d_resolved_names_format_Phylomatic = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_Phylomatic);
        d_o_convert_df_taxons_format_2_to_4 o_resource_SetOfTaxon d_resolved_names_format_4 = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_4);
        d_o_convert_df_taxons_format_4_to_6 o_resource_SetOfTaxon d_resolved_names_format_6 = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_6);
        d_o_convert_df_taxons_format_6_to_ALL_COMBO o_resource_SetOfTaxon d_resolved_names_format_OT = mkS (mkCl o_resource_SetOfTaxon (mkV2 "use") d_resolved_names_format_OT);
        d_o_convert_species_tree_format_NewickTree_to_ALL_COMBO o_resource_speciesTree d_phyloTree = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_phyloTree);
        d_o_convert_gene_tree_format_NewickTree_to_ALL_COMBO o_resource_geneTree d_phyloTree = mkS (mkCl o_resource_geneTree (mkV2 "use") d_phyloTree);
        d_o_convert_species_tree_format_PhyloTree_to_NMSU o_resource_speciesTree d_nmsu_tree_format = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_nmsu_tree_format);
        d_o_convert_gene_tree_format_PhyloTree_to_NMSU o_resource_geneTree d_nmsu_tree_format = mkS (mkCl o_resource_geneTree (mkV2 "use") d_nmsu_tree_format);
        d_o_convert_species_tree_format_NMSU_to_NewickTree o_resource_speciesTree d_newickTree = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_newickTree);
        d_o_convert_gene_tree_format_NMSU_to_NewickTree o_resource_geneTree d_newickTree = mkS (mkCl o_resource_geneTree (mkV2 "use") d_newickTree);
        d_o_convert_species_tree_format_PhyloTree_to_phylo4Tree o_resource_speciesTree d_phylo4Tree = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_phylo4Tree);
        d_o_convert_gene_tree_format_PhyloTree_to_phylo4Tree o_resource_geneTree d_phylo4Tree = mkS (mkCl o_resource_geneTree (mkV2 "use") d_phylo4Tree);
        d_o_convert_species_tree_format_Phylo4Tree_to_PhyloTree o_resource_speciesTree d_phyloTree = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_phyloTree);
        d_o_convert_gene_tree_format_Phylo4Tree_to_PhyloTree o_resource_geneTree d_phyloTree = mkS (mkCl o_resource_geneTree (mkV2 "use") d_phyloTree);
        d_o_convert_species_tree_format_1_to_2 o_resource_speciesTree d_tree_format_2 = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_tree_format_2);
        d_o_convert_gene_tree_format_1_to_2 o_resource_geneTree d_tree_format_2 = mkS (mkCl o_resource_geneTree (mkV2 "use") d_tree_format_2);
        d_o_convert_species_tree_format_2_to_pHYLIPTree o_resource_speciesTree d_pHYLIPTree = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_pHYLIPTree);
        d_o_convert_gene_tree_format_2_to_pHYLIPTree o_resource_geneTree d_pHYLIPTree = mkS (mkCl o_resource_geneTree (mkV2 "use") d_pHYLIPTree);
        d_o_convert_species_tree_format_pHYLIPTree_to_PhyloTree o_resource_speciesTree d_phyloTree = mkS (mkCl o_resource_speciesTree (mkV2 "use") d_phyloTree);
        d_o_convert_gene_tree_format_pHYLIPTree_to_PhyloTree o_resource_geneTree d_phyloTree = mkS (mkCl o_resource_geneTree (mkV2 "use") d_phyloTree);
        tree_figure d_figure d_tree = mkS (mkCl d_figure (mkV2 "illustrate") d_tree);
        i_phylotastic_resources = mkNP( mkCN (mkN "phylotastic resources"));
        i_resource_speciesTree = mkNP( mkCN (mkN "species tree"));
        i_resource_geneTree = mkNP( mkCN (mkN "geneTree"));
        i_resource_CountryName = mkNP( mkCN (mkN "name of country"));
        i_resource_SetOfGeneStrings = mkNP( mkCN (mkN "set of gene strings"));
        i_resource_String = mkNP( mkCN (mkN "a string"));
        i_phylotastic_concept = mkNP( mkCN (mkN "phylotastic concept"));
        i_phylomatic_method = mkNP( mkCN (mkN "method"));
        i_resource_Tree = mkNP( mkCN (mkN "tree"));
        i_resource_URI = mkNP( mkCN (mkN "a URI"));
        i_resource_SetOfTaxon = mkNP( mkCN (mkN "a set of taxon"));
        i_resource_Name = mkNP( mkCN (mkN "a name"));
        i_network = mkNP( mkCN (mkN "network"));
        i_resource_SetOfResolvedName = mkNP( mkCN (mkN "a set of resolved names"));
        i_resource_FreeText = mkNP( mkCN (mkN "text"));
        i_resource_Text = mkNP( mkCN (mkN "text"));
        i_resource_SetOfScientificNames = mkNP( mkCN (mkN "a set of scientific names"));
        i_resource_WebURL = mkNP( mkCN (mkN "web URL"));
        i_resource_SetOfThings = mkNP( mkCN (mkN "set of things"));
        i_resource_SpeciesName = mkNP( mkCN (mkN "species_name"));
        i_resource_ScientificName = mkNP( mkCN (mkN "scientific name"));
        i_resource_CommonName = mkNP( mkCN (mkN "commonName"));
        i_resource_method = mkNP( mkCN (mkN "resource_method"));
        i_resource_Number = mkNP( mkCN (mkN "a number"));
        i_resource_CountryCode = mkNP( mkCN (mkN "resource country code"));
        i_resource_Document = mkNP( mkCN (mkN "recource document"));
        i_speciesTree = mkNP( mkCN (mkN "species tree"));
        i_resource_Object = mkNP( mkCN (mkN "object"));
        i_resource_SetOfStrings = mkNP( mkCN (mkN "set of strings"));
        i_resource_taxon = mkNP( mkCN (mkN "taxon"));
        i_tree = mkNP( mkCN (mkN "tree"));
        i_resource_SetOfSciName = mkNP( mkCN (mkN "a set of scientific names"));
        i_resource_SetOfNames = mkNP( mkCN (mkN "a set of names"));
        o_phylotastic_resources = mkNP( mkCN (mkN "phylotastic resources"));
        o_resource_speciesTree = mkNP( mkCN (mkN "species tree"));
        o_resource_geneTree = mkNP( mkCN (mkN "geneTree"));
        o_resource_CountryName = mkNP( mkCN (mkN "name of country"));
        o_resource_String = mkNP( mkCN (mkN "a string"));
        o_resource_reconcileTree = mkNP( mkCN (mkN "resource reconcile tree"));
        o_message = mkNP( mkCN (mkN "message"));
        o_phylotastic_concept = mkNP( mkCN (mkN "phylotastic concept"));
        o_resource_Tree = mkNP( mkCN (mkN "tree"));
        o_resource_metadata_tree_scaling = mkNP( mkCN (mkN "resource_metadata_tree_scaling"));
        o_resource_SetOfTaxon = mkNP( mkCN (mkN "a set of taxon"));
        o_resource_Name = mkNP( mkCN (mkN "a name"));
        o_network = mkNP( mkCN (mkN "network"));
        o_resource_SetOfResolvedName = mkNP( mkCN (mkN "a set of resolved names"));
        o_resource_FreeText = mkNP( mkCN (mkN "text"));
        o_resource_Text = mkNP( mkCN (mkN "text"));
        o_resource_SetOfScientificNames = mkNP( mkCN (mkN "a set of scientific names"));
        o_resource_WebURL = mkNP( mkCN (mkN "web URL"));
        o_resource_URI = mkNP( mkCN (mkN "a URI"));
        o_resource_SetOfThings = mkNP( mkCN (mkN "set of things"));
        o_resource_SpeciesName = mkNP( mkCN (mkN "species_name"));
        o_resource_AreSameTree = mkNP( mkCN (mkN "resource_AreSameTree"));
        o_resource_ScientificName = mkNP( mkCN (mkN "scientific name"));
        o_reconcileTree = mkNP( mkCN (mkN "reconcile tree"));
        o_resource_Image = mkNP( mkCN (mkN "image"));
        o_resource_speciesTree_with_BranchLengths = mkNP( mkCN (mkN "resource_speciesTree_with_BranchLengths"));
        o_resource_Boolean = mkNP( mkCN (mkN "resource_Boolean"));
        o_speciesTree = mkNP( mkCN (mkN "species tree"));
        o_resource_Object = mkNP( mkCN (mkN "object"));
        o_ws_response_message = mkNP( mkCN (mkN "ws_response_message"));
        o_resource_SetOfStrings = mkNP( mkCN (mkN "set of strings"));
        o_resource_taxon = mkNP( mkCN (mkN "taxon"));
        o_tree = mkNP( mkCN (mkN "tree"));
        o_resource_SetOfSciName = mkNP( mkCN (mkN "a set of scientific names"));
        o_resource_SetOfNames = mkNP( mkCN (mkN "a set of names"));
        d_http_url = mkNP( mkCN (mkN "http url format"));
        d_plain_text = mkNP( mkCN (mkN "plain text format"));
        d_raw_names_format_GNR = mkNP( mkCN (mkN "raw_names_format_GNR format"));
        d_raw_names_format_OT = mkNP( mkCN (mkN "raw_names_format_OT format"));
        d_string = mkNP( mkCN (mkN "string format"));
        d_resolved_names_format_OT = mkNP( mkCN (mkN "resolved_names_format_OT format"));
        d_resolved_names_format_PhyloT = mkNP( mkCN (mkN "resolved_names_format_PhyloT format"));
        d_resolved_names_format_Phylomatic = mkNP( mkCN (mkN "resolved_names_format_Phylomatic format"));
        d_integer = mkNP( mkCN (mkN "integer format"));
        d_newickTree = mkNP( mkCN (mkN "newick tree format"));
        d_compare_tree_format = mkNP( mkCN (mkN "compare_tree_format format"));
        d_data_format_E = mkNP( mkCN (mkN "data_format_E format"));
        d_list_of_strings = mkNP( mkCN (mkN "list of strings format"));
        d_raw_text = mkNP( mkCN (mkN "raw_text format"));
        d_raw_names_format_1 = mkNP( mkCN (mkN "raw_names_format_1 format"));
        d_raw_names_format_3 = mkNP( mkCN (mkN "raw_names_format_3 format"));
        d_raw_names_format_5 = mkNP( mkCN (mkN "raw_names_format_5 format"));
        d_raw_names_format_2 = mkNP( mkCN (mkN "raw_names_format_2 format"));
        d_raw_names_format_4 = mkNP( mkCN (mkN "raw_names_format_4 format"));
        d_raw_names_format_6 = mkNP( mkCN (mkN "raw_names_format_6 format"));
        d_resolved_names_format_GNR = mkNP( mkCN (mkN "resolved_names_format_GNR format"));
        d_resolved_names_format_1 = mkNP( mkCN (mkN "resolved_names_format_1 format"));
        d_resolved_names_format_3 = mkNP( mkCN (mkN "resolved_names_format_3 format"));
        d_resolved_names_format_5 = mkNP( mkCN (mkN "resolved_names_format_5 format"));
        d_resolved_names_format_2 = mkNP( mkCN (mkN "resolved_names_format_2 format"));
        d_resolved_names_format_4 = mkNP( mkCN (mkN "resolved_names_format_4 format"));
        d_resolved_names_format_6 = mkNP( mkCN (mkN "resolved_names_format_6 format"));
        d_phyloTree = mkNP( mkCN (mkN "phylo tree format"));
        d_nmsu_tree_format = mkNP( mkCN (mkN "nmsu_tree_format format"));
        d_phylo4Tree = mkNP( mkCN (mkN "phylo 4 tree format"));
        d_tree_format_1 = mkNP( mkCN (mkN "tree_format_1 format"));
        d_tree_format_2 = mkNP( mkCN (mkN "tree_format_2 format"));
        d_pHYLIPTree = mkNP( mkCN (mkN "phylip tree format"));
        d_boolean = mkNP( mkCN (mkN "boolean format"));
        d_figure = mkNP (mkCN (mkN "Figure 1"));
        d_tree = mkNP (mkCN (mkN "the extracted tree"));
    oper
        phylotastic_ResolvedScientificNames_GNR_TNRS_POST_in = mkNP (mkCN (mkN "input of phylotastic_ResolvedScientificNames_GNR_TNRS_POST"));
        phylotastic_ResolvedScientificNames_GNR_TNRS_POST_out = mkNP (mkCN (mkN "phylotastic_ResolvedScientificNames_GNR_TNRS_POST's output"));
        convert_species_tree_format_NMSU_to_NewickTree_in = mkNP (mkCN (mkN "convert_species_tree_format_NMSU_to_NewickTree"));
        convert_species_tree_format_NMSU_to_NewickTree_out = mkNP (mkCN (mkN "it"));
        names_extraction_document_in = mkNP (mkCN (mkN "names_extraction_document"));
        names_extraction_document_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET_in = mkNP (mkCN (mkN "input of phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET"));
        phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET_out = mkNP (mkCN (mkN "output of phylotastic_GetSpeciesOfTaxon_Genome_NCBI_GET"));
        phylotastic_ResolvedScientificNames_OT_TNRS_GET_in = mkNP (mkCN (mkN "input of phylotastic_ResolvedScientificNames_OT_TNRS_GET"));
        phylotastic_ResolvedScientificNames_OT_TNRS_GET_out = mkNP (mkCN (mkN "phylotastic_ResolvedScientificNames_OT_TNRS_GET's output"));
        convert_df_sci_names_format_1_to_3_in = mkNP (mkCN (mkN "convert_df_sci_names_format_1_to_3"));
        convert_df_sci_names_format_1_to_3_out = mkNP (mkCN (mkN "it"));
        convert_df_sci_names_format_3_to_5_in = mkNP (mkCN (mkN "convert_df_sci_names_format_3_to_5"));
        convert_df_sci_names_format_3_to_5_out = mkNP (mkCN (mkN "it"));
        convert_df_taxons_format_3_to_5_in = mkNP (mkCN (mkN "convert_df_taxons_format_3_to_5"));
        convert_df_taxons_format_3_to_5_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetPhylogeneticTree_OT_GET_in = mkNP (mkCN (mkN "phylotastic_GetPhylogeneticTree_OT_GET"));
        phylotastic_GetPhylogeneticTree_OT_GET_out = mkNP (mkCN (mkN "it"));
        convert_species_tree_format_PhyloTree_to_phylo4Tree_in = mkNP (mkCN (mkN "convert_species_tree_format_PhyloTree_to_phylo4Tree"));
        convert_species_tree_format_PhyloTree_to_phylo4Tree_out = mkNP (mkCN (mkN "it"));
        convert_df_sci_names_format_6_to_OT_in = mkNP (mkCN (mkN "convert_df_sci_names_format_6_to_OT"));
        convert_df_sci_names_format_6_to_OT_out = mkNP (mkCN (mkN "it"));
        convert_df_taxons_format_2_to_4_in = mkNP (mkCN (mkN "convert_df_taxons_format_2_to_4"));
        convert_df_taxons_format_2_to_4_out = mkNP (mkCN (mkN "it"));
        convert_df_resolved_names_format_GNR_to_Phylomatic_in = mkNP (mkCN (mkN "input of convert_df_resolved_names_format_GNR_to_Phylomatic"));
        convert_df_resolved_names_format_GNR_to_Phylomatic_out = mkNP (mkCN (mkN "output of convert_df_resolved_names_format_GNR_to_Phylomatic"));
        phylotastic_GetChronograms_ScaledSpeciesTree_DateLife_POST_in = mkNP (mkCN (mkN "phylotastic_GetChronograms_ScaledSpeciesTree_DateLife_POST"));
        phylotastic_GetChronograms_ScaledSpeciesTree_DateLife_POST_out = mkNP (mkCN (mkN "it"));
        convert_gene_tree_format_PhyloTree_to_phylo4Tree_in = mkNP (mkCN (mkN "input of convert_gene_tree_format_PhyloTree_to_phylo4Tree"));
        convert_gene_tree_format_PhyloTree_to_phylo4Tree_out = mkNP (mkCN (mkN "output of convert_gene_tree_format_PhyloTree_to_phylo4Tree"));
        taxon_to_species_operation_in = mkNP (mkCN (mkN "input of taxon_to_species_operation"));
        taxon_to_species_operation_out = mkNP (mkCN (mkN "output of taxon_to_species_operation"));
        convert_df_taxons_format_5_to_OT_in = mkNP (mkCN (mkN "convert_df_taxons_format_5_to_OT"));
        convert_df_taxons_format_5_to_OT_out = mkNP (mkCN (mkN "it"));
        phylogeny_based_extraction_in = mkNP (mkCN (mkN "input of phylogeny_based_extraction"));
        phylogeny_based_extraction_out = mkNP (mkCN (mkN "output of phylogeny_based_extraction"));
        convert_df_resolved_names_format_4_to_6_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_4_to_6"));
        convert_df_resolved_names_format_4_to_6_out = mkNP (mkCN (mkN "it"));
        convert_gene_tree_format_NewickTree_to_ALL_COMBO_in = mkNP (mkCN (mkN "convert_gene_tree_format_NewickTree_to_ALL_COMBO"));
        convert_gene_tree_format_NewickTree_to_ALL_COMBO_out = mkNP (mkCN (mkN "it"));
        gene_tree_scaling_in = mkNP (mkCN (mkN "gene_tree_scaling"));
        gene_tree_scaling_out = mkNP (mkCN (mkN "it"));
        tree_scaling_operation_in = mkNP (mkCN (mkN "tree_scaling_operation's input"));
        tree_scaling_operation_out = mkNP (mkCN (mkN "tree_scaling_operation's output"));
        look_up_taxonomy_out = mkNP (mkCN (mkN "look_up_taxonomy's output"));
        phylotastic_GetPhylogeneticTree_Phylomatic_POST_in = mkNP (mkCN (mkN "phylotastic_GetPhylogeneticTree_Phylomatic_POST"));
        phylotastic_GetPhylogeneticTree_Phylomatic_POST_out = mkNP (mkCN (mkN "it"));
        convert_species_tree_format_1_to_2_in = mkNP (mkCN (mkN "convert_species_tree_format_1_to_2"));
        convert_species_tree_format_1_to_2_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetAllSpeciesFromTaxon_OT_GET_in = mkNP (mkCN (mkN "phylotastic_GetAllSpeciesFromTaxon_OT_GET"));
        phylotastic_GetAllSpeciesFromTaxon_OT_GET_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetSpeciesScientificNameFromCommonName_NCBI_GET_in = mkNP (mkCN (mkN "phylotastic_GetSpeciesScientificNameFromCommonName_NCBI_GET"));
        phylotastic_GetSpeciesScientificNameFromCommonName_NCBI_GET_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetReconciliationTree_GET_in = mkNP (mkCN (mkN "input of phylotastic_GetReconciliationTree_GET"));
        phylotastic_GetReconciliationTree_GET_out = mkNP (mkCN (mkN "phylotastic_GetReconciliationTree_GET's output"));
        convert_gene_tree_format_1_to_2_in = mkNP (mkCN (mkN "convert_gene_tree_format_1_to_2's input"));
        convert_gene_tree_format_1_to_2_out = mkNP (mkCN (mkN "convert_gene_tree_format_1_to_2's output"));
        convert_df_resolved_names_format_GNR_to_OT_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_GNR_to_OT"));
        convert_df_resolved_names_format_GNR_to_OT_out = mkNP (mkCN (mkN "it"));
        tree_transformation_in = mkNP (mkCN (mkN "tree_transformation"));
        tree_transformation_out = mkNP (mkCN (mkN "it"));
        country_code_to_name_in = mkNP (mkCN (mkN "country_code_to_name"));
        country_code_to_name_out = mkNP (mkCN (mkN "it"));
        phylotastic_GenerateGeneTree_From_Genes_in = mkNP (mkCN (mkN "phylotastic_GenerateGeneTree_From_Genes"));
        phylotastic_GenerateGeneTree_From_Genes_out = mkNP (mkCN (mkN "it"));
        convert_df_taxons_format_1_to_3_in = mkNP (mkCN (mkN "convert_df_taxons_format_1_to_3"));
        convert_df_taxons_format_1_to_3_out = mkNP (mkCN (mkN "it"));
        convert_gene_tree_format_NMSU_to_NewickTree_in = mkNP (mkCN (mkN "convert_gene_tree_format_NMSU_to_NewickTree"));
        convert_gene_tree_format_NMSU_to_NewickTree_out = mkNP (mkCN (mkN "it"));
        convert_df_sci_names_format_5_to_OT_in = mkNP (mkCN (mkN "convert_df_sci_names_format_5_to_OT"));
        convert_df_sci_names_format_5_to_OT_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetPhylogeneticTree_PhyloT_GET_in = mkNP (mkCN (mkN "phylotastic_GetPhylogeneticTree_PhyloT_GET"));
        phylotastic_GetPhylogeneticTree_PhyloT_GET_out = mkNP (mkCN (mkN "it"));
        convert_df_resolved_names_format_3_to_5_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_3_to_5"));
        convert_df_resolved_names_format_3_to_5_out = mkNP (mkCN (mkN "it"));
        names_operation_out = mkNP (mkCN (mkN "names_operation's output"));
        phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET_in = mkNP (mkCN (mkN "input of phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET"));
        phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET_out = mkNP (mkCN (mkN "output of phylotastic_FindScientificNamesFromWeb_CS_NMSU_GET"));
        scientific_name_to_taxonomy_in = mkNP (mkCN (mkN "scientific_name_to_taxonomy"));
        scientific_name_to_taxonomy_out = mkNP (mkCN (mkN "it"));
        convert_df_resolved_names_format_1_to_3_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_1_to_3"));
        convert_df_resolved_names_format_1_to_3_out = mkNP (mkCN (mkN "it"));
        taxon_to_species_by_genome_in = mkNP (mkCN (mkN "taxon_to_species_by_genome's input"));
        taxon_to_species_by_genome_out = mkNP (mkCN (mkN "taxon_to_species_by_genome's output"));
        names_extraction_operation_out = mkNP (mkCN (mkN "output of names_extraction_operation"));
        phylotastic_GetPhylogeneticTree_PhyloT_POST_in = mkNP (mkCN (mkN "input of phylotastic_GetPhylogeneticTree_PhyloT_POST"));
        phylotastic_GetPhylogeneticTree_PhyloT_POST_out = mkNP (mkCN (mkN "output of phylotastic_GetPhylogeneticTree_PhyloT_POST"));
        convert_df_resolved_names_format_5_to_PhyloT_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_5_to_PhyloT"));
        convert_df_resolved_names_format_5_to_PhyloT_out = mkNP (mkCN (mkN "it"));
        names_conversion_operation_out = mkNP (mkCN (mkN "names_conversion_operation's output"));
        phylotastic_FindScientificNamesFromFreeText_GNRD_GET_in = mkNP (mkCN (mkN "phylotastic_FindScientificNamesFromFreeText_GNRD_GET"));
        phylotastic_FindScientificNamesFromFreeText_GNRD_GET_out = mkNP (mkCN (mkN "it"));
        convert_df_taxons_format_GNR_to_OT_in = mkNP (mkCN (mkN "input of convert_df_taxons_format_GNR_to_OT"));
        convert_df_taxons_format_GNR_to_OT_out = mkNP (mkCN (mkN "output of convert_df_taxons_format_GNR_to_OT"));
        names_resolution_operation_in = mkNP (mkCN (mkN "input of names_resolution_operation"));
        names_resolution_operation_out = mkNP (mkCN (mkN "names_resolution_operation's output"));
        common_name_to_scientific_name_in = mkNP (mkCN (mkN "common_name_to_scientific_name"));
        common_name_to_scientific_name_out = mkNP (mkCN (mkN "it"));
        gene_based_extraction_in = mkNP (mkCN (mkN "gene_based_extraction's input"));
        gene_based_extraction_out = mkNP (mkCN (mkN "output of gene_based_extraction"));
        convert_df_resolved_names_format_5_to_Phylomatic_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_5_to_Phylomatic"));
        convert_df_resolved_names_format_5_to_Phylomatic_out = mkNP (mkCN (mkN "it"));
        phylotastic_ExtractSpeciesNames_From_Gene_Tree_GET_in = mkNP (mkCN (mkN "phylotastic_ExtractSpeciesNames_From_Gene_Tree_GET"));
        phylotastic_ExtractSpeciesNames_From_Gene_Tree_GET_out = mkNP (mkCN (mkN "it"));
        convert_df_taxons_format_GNR_to_Phylomatic_in = mkNP (mkCN (mkN "input of convert_df_taxons_format_GNR_to_Phylomatic"));
        convert_df_taxons_format_GNR_to_Phylomatic_out = mkNP (mkCN (mkN "convert_df_taxons_format_GNR_to_Phylomatic's output"));
        taxonomy_based_extraction_in = mkNP (mkCN (mkN "taxonomy_based_extraction"));
        taxonomy_based_extraction_out = mkNP (mkCN (mkN "it"));
        look_up_scientific_name_out = mkNP (mkCN (mkN "look_up_scientific_name's output"));
        phylotastic_GeneTree_Scaling_in = mkNP (mkCN (mkN "phylotastic_GeneTree_Scaling"));
        phylotastic_GeneTree_Scaling_out = mkNP (mkCN (mkN "it"));
        convert_df_resolved_names_format_5_to_OT_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_5_to_OT"));
        convert_df_resolved_names_format_5_to_OT_out = mkNP (mkCN (mkN "it"));
        convert_df_text_format_raw_to_plain_in = mkNP (mkCN (mkN "convert_df_text_format_raw_to_plain"));
        convert_df_text_format_raw_to_plain_out = mkNP (mkCN (mkN "it"));
        phylotastic_FindScientificNamesFromWeb_GNRD_GET_in = mkNP (mkCN (mkN "phylotastic_FindScientificNamesFromWeb_GNRD_GET"));
        phylotastic_FindScientificNamesFromWeb_GNRD_GET_out = mkNP (mkCN (mkN "it"));
        convert_species_tree_format_pHYLIPTree_to_PhyloTree_in = mkNP (mkCN (mkN "convert_species_tree_format_pHYLIPTree_to_PhyloTree"));
        convert_species_tree_format_pHYLIPTree_to_PhyloTree_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetMetadata_Chronogram_DateLife_POST_in = mkNP (mkCN (mkN "input of phylotastic_GetMetadata_Chronogram_DateLife_POST"));
        phylotastic_GetMetadata_Chronogram_DateLife_POST_out = mkNP (mkCN (mkN "phylotastic_GetMetadata_Chronogram_DateLife_POST's output"));
        phylotastic_ResolvedScientificNames_GNR_TNRS_GET_in = mkNP (mkCN (mkN "phylotastic_ResolvedScientificNames_GNR_TNRS_GET"));
        phylotastic_ResolvedScientificNames_GNR_TNRS_GET_out = mkNP (mkCN (mkN "it"));
        tree_visualization_in = mkNP (mkCN (mkN "tree_visualization"));
        tree_visualization_out = mkNP (mkCN (mkN "it"));
        convert_df_resolved_names_format_GNR_to_PhyloT_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_GNR_to_PhyloT"));
        convert_df_resolved_names_format_GNR_to_PhyloT_out = mkNP (mkCN (mkN "it"));
        convert_df_taxons_format_6_to_ALL_COMBO_in = mkNP (mkCN (mkN "input of convert_df_taxons_format_6_to_ALL_COMBO"));
        convert_df_taxons_format_6_to_ALL_COMBO_out = mkNP (mkCN (mkN "convert_df_taxons_format_6_to_ALL_COMBO's output"));
        convert_species_tree_format_Phylo4Tree_to_PhyloTree_in = mkNP (mkCN (mkN "convert_species_tree_format_Phylo4Tree_to_PhyloTree's input"));
        convert_species_tree_format_Phylo4Tree_to_PhyloTree_out = mkNP (mkCN (mkN "output of convert_species_tree_format_Phylo4Tree_to_PhyloTree"));
        convert_df_taxons_format_5_to_PhyloT_in = mkNP (mkCN (mkN "convert_df_taxons_format_5_to_PhyloT"));
        convert_df_taxons_format_5_to_PhyloT_out = mkNP (mkCN (mkN "it"));
        convert_df_taxons_format_GNR_to_PhyloT_in = mkNP (mkCN (mkN "input of convert_df_taxons_format_GNR_to_PhyloT"));
        convert_df_taxons_format_GNR_to_PhyloT_out = mkNP (mkCN (mkN "convert_df_taxons_format_GNR_to_PhyloT's output"));
        convert_gene_tree_format_pHYLIPTree_to_PhyloTree_in = mkNP (mkCN (mkN "convert_gene_tree_format_pHYLIPTree_to_PhyloTree's input"));
        convert_gene_tree_format_pHYLIPTree_to_PhyloTree_out = mkNP (mkCN (mkN "convert_gene_tree_format_pHYLIPTree_to_PhyloTree's output"));
        species_tree_scaling_in = mkNP (mkCN (mkN "input of species_tree_scaling"));
        species_tree_scaling_out = mkNP (mkCN (mkN "output of species_tree_scaling"));
        convert_df_sci_names_format_5_to_GNR_in = mkNP (mkCN (mkN "convert_df_sci_names_format_5_to_GNR"));
        convert_df_sci_names_format_5_to_GNR_out = mkNP (mkCN (mkN "it"));
        convert_species_tree_format_PhyloTree_to_NMSU_in = mkNP (mkCN (mkN "convert_species_tree_format_PhyloTree_to_NMSU"));
        convert_species_tree_format_PhyloTree_to_NMSU_out = mkNP (mkCN (mkN "it"));
        convert_gene_tree_format_Phylo4Tree_to_PhyloTree_in = mkNP (mkCN (mkN "convert_gene_tree_format_Phylo4Tree_to_PhyloTree"));
        convert_gene_tree_format_Phylo4Tree_to_PhyloTree_out = mkNP (mkCN (mkN "it"));
        convert_df_sci_names_format_4_to_6_in = mkNP (mkCN (mkN "convert_df_sci_names_format_4_to_6"));
        convert_df_sci_names_format_4_to_6_out = mkNP (mkCN (mkN "it"));
        convert_species_tree_format_NewickTree_to_ALL_COMBO_in = mkNP (mkCN (mkN "convert_species_tree_format_NewickTree_to_ALL_COMBO"));
        convert_species_tree_format_NewickTree_to_ALL_COMBO_out = mkNP (mkCN (mkN "it"));
        tree_extraction_operation_out = mkNP (mkCN (mkN "output of tree_extraction_operation"));
        tree_generation_out = mkNP (mkCN (mkN "output of tree_generation"));
        google_ConvertCountryCodeToName_GET_in = mkNP (mkCN (mkN "google_ConvertCountryCodeToName_GET"));
        google_ConvertCountryCodeToName_GET_out = mkNP (mkCN (mkN "it"));
        convert_gene_tree_format_PhyloTree_to_NMSU_in = mkNP (mkCN (mkN "convert_gene_tree_format_PhyloTree_to_NMSU's input"));
        convert_gene_tree_format_PhyloTree_to_NMSU_out = mkNP (mkCN (mkN "convert_gene_tree_format_PhyloTree_to_NMSU's output"));
        convert_df_resolved_names_format_2_to_4_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_2_to_4"));
        convert_df_resolved_names_format_2_to_4_out = mkNP (mkCN (mkN "it"));
        convert_df_resolved_names_format_6_to_ALL_COMBO_in = mkNP (mkCN (mkN "convert_df_resolved_names_format_6_to_ALL_COMBO"));
        convert_df_resolved_names_format_6_to_ALL_COMBO_out = mkNP (mkCN (mkN "it"));
        convert_species_tree_format_2_to_pHYLIPTree_in = mkNP (mkCN (mkN "convert_species_tree_format_2_to_pHYLIPTree's input"));
        convert_species_tree_format_2_to_pHYLIPTree_out = mkNP (mkCN (mkN "output of convert_species_tree_format_2_to_pHYLIPTree"));
        tree_metadata_chronogram_in = mkNP (mkCN (mkN "tree_metadata_chronogram's input"));
        tree_metadata_chronogram_out = mkNP (mkCN (mkN "tree_metadata_chronogram's output"));
        tree_retrieval_operation_out = mkNP (mkCN (mkN "tree_retrieval_operation's output"));
        openTree_GetTaxonomyNameFromSciName_GET_in = mkNP (mkCN (mkN "openTree_GetTaxonomyNameFromSciName_GET's input"));
        openTree_GetTaxonomyNameFromSciName_GET_out = mkNP (mkCN (mkN "openTree_GetTaxonomyNameFromSciName_GET's output"));
        convert_df_taxons_format_4_to_6_in = mkNP (mkCN (mkN "convert_df_taxons_format_4_to_6's input"));
        convert_df_taxons_format_4_to_6_out = mkNP (mkCN (mkN "convert_df_taxons_format_4_to_6's output"));
        convert_gene_tree_format_2_to_pHYLIPTree_in = mkNP (mkCN (mkN "convert_gene_tree_format_2_to_pHYLIPTree"));
        convert_gene_tree_format_2_to_pHYLIPTree_out = mkNP (mkCN (mkN "it"));
        convert_df_taxons_format_5_to_Phylomatic_in = mkNP (mkCN (mkN "convert_df_taxons_format_5_to_Phylomatic"));
        convert_df_taxons_format_5_to_Phylomatic_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetPhylogeneticTree_OT_POST_in = mkNP (mkCN (mkN "phylotastic_GetPhylogeneticTree_OT_POST's input"));
        phylotastic_GetPhylogeneticTree_OT_POST_out = mkNP (mkCN (mkN "phylotastic_GetPhylogeneticTree_OT_POST's output"));
        names_extraction_web_in = mkNP (mkCN (mkN "names_extraction_web"));
        names_extraction_web_out = mkNP (mkCN (mkN "it"));
        convert_df_sci_names_format_6_to_GNR_in = mkNP (mkCN (mkN "convert_df_sci_names_format_6_to_GNR"));
        convert_df_sci_names_format_6_to_GNR_out = mkNP (mkCN (mkN "it"));
        phylotastic_GetPhylogeneticTree_Phylomatic_GET_in = mkNP (mkCN (mkN "phylotastic_GetPhylogeneticTree_Phylomatic_GET"));
        phylotastic_GetPhylogeneticTree_Phylomatic_GET_out = mkNP (mkCN (mkN "it"));
        names_extraction_tree_in = mkNP (mkCN (mkN "names_extraction_tree"));
        names_extraction_tree_out = mkNP (mkCN (mkN "it"));
        names_extraction_text_in = mkNP (mkCN (mkN "names_extraction_text"));
        names_extraction_text_out = mkNP (mkCN (mkN "it"));
        phylotastic_ResolvedScientificNames_OT_TNRS_POST_in = mkNP (mkCN (mkN "phylotastic_ResolvedScientificNames_OT_TNRS_POST"));
        phylotastic_ResolvedScientificNames_OT_TNRS_POST_out = mkNP (mkCN (mkN "it"));
        convert_df_sci_names_format_2_to_4_in = mkNP (mkCN (mkN "convert_df_sci_names_format_2_to_4"));
        convert_df_sci_names_format_2_to_4_out = mkNP (mkCN (mkN "it"));
}